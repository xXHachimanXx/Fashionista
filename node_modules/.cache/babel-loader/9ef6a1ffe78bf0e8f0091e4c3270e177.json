{"ast":null,"code":"import { ADD_PRODUCT, REMOVE_PRODUCT, UPDATE_CART_PRODUCT_QUANTITY } from '../actions/cartActions';\nimport { stringToReal } from \"../../utils/converters\";\nexport const INITIAL_STATE = {\n  cart: [],\n  total_value: 0.0,\n  counter: 0\n}; // falta melhorias\n\nexport default function cartReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      state.total_value += stringToReal(action.data.product_info.actual_price);\n      return { ...state,\n        cart: [...state.cart, action.data],\n        counter: ++state.counter\n      };\n\n    case REMOVE_PRODUCT:\n      const productToRemove = state.cart.find(product => product.product_info.code_color === action.product_id && product.product_info.size === action.product_size);\n      const newTotalValue = productToRemove.quantity * stringToReal(productToRemove.product_info.actual_price);\n      const newCart = state.cart.filter(product => product.product_info.code_color !== action.product_id || product.product_info.size !== action.product_size);\n      return { ...state,\n        counter: state.counter -= productToRemove.quantity,\n        cart: newCart,\n        total_value: state.total_value - newTotalValue\n      };\n\n    case UPDATE_CART_PRODUCT_QUANTITY:\n      var q = state.cart.find(product => product.product_info.code_color === action.product_id && product.product_info.size === action.product_size); // Se não existir um produto no carrinho...\n\n      if (q.quantity === 0) {\n        if (action.value > 0) {\n          state.cart.find(product => product.product_info.code_color === action.product_id && product.product_info.size === action.product_size).quantity += action.value;\n        }\n      } // se existir ...\n      else {\n          state.cart.find(product => product.product_info.code_color === action.product_id && product.product_info.size === action.product_size).quantity += action.value;\n        } // Se for incremento...\n\n\n      if (action.value > 0) {\n        state.total_value += stringToReal(q.product_info.actual_price);\n        ++state.counter;\n      } // Se for decremento...\n      else {\n          state.total_value -= stringToReal(q.product_info.actual_price);\n          --state.counter;\n        }\n\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/carrocinha/codenation/fashionista/src/store/reducers/cartReducer.js"],"names":["ADD_PRODUCT","REMOVE_PRODUCT","UPDATE_CART_PRODUCT_QUANTITY","stringToReal","INITIAL_STATE","cart","total_value","counter","cartReducer","state","action","type","data","product_info","actual_price","productToRemove","find","product","code_color","product_id","size","product_size","newTotalValue","quantity","newCart","filter","q","value"],"mappings":"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","sourcesContent":["import {\n  ADD_PRODUCT,\n  REMOVE_PRODUCT,\n  UPDATE_CART_PRODUCT_QUANTITY\n} from '../actions/cartActions';\n\nimport {\n  stringToReal\n} from \"../../utils/converters\";\n\nexport const INITIAL_STATE = {\n  cart: [],\n  total_value: 0.0,\n  counter: 0\n};\n\n\n// falta melhorias\nexport default function cartReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n\n    case ADD_PRODUCT:\n      state.total_value += stringToReal(action.data.product_info.actual_price);\n      return {\n        ...state,\n        cart: [...state.cart, action.data],\n        counter: ++state.counter\n      }\n\n    case REMOVE_PRODUCT:\n      const productToRemove = state.cart.find(product =>\n        (product.product_info.code_color === action.product_id) &&\n        (product.product_info.size === action.product_size)\n      );\n\n      const newTotalValue = productToRemove.quantity * \n        stringToReal(productToRemove.product_info.actual_price);\n\n      const newCart = state.cart.filter(product =>\n        ((product.product_info.code_color !== action.product_id) ||\n         (product.product_info.size !== action.product_size))\n      );\n      \n      return {\n        ...state,\n        counter: state.counter -= productToRemove.quantity,\n        cart: newCart,\n        total_value: state.total_value - newTotalValue\n      }\n\n    case UPDATE_CART_PRODUCT_QUANTITY:\n      var q = state.cart.find(product =>\n        (product.product_info.code_color === action.product_id) &&\n        (product.product_info.size === action.product_size)\n      );\n\n      // Se não existir um produto no carrinho...\n      if (q.quantity === 0) {\n        if (action.value > 0) {\n          state.cart.find(product =>\n            product.product_info.code_color === action.product_id &&\n            (product.product_info.size === action.product_size)\n          ).quantity += action.value;\n        }\n      }\n      // se existir ...\n      else {\n        state.cart.find(product =>\n          product.product_info.code_color === action.product_id &&\n          (product.product_info.size === action.product_size)\n        ).quantity += action.value;\n      }\n\n      // Se for incremento...\n      if (action.value > 0) {\n        state.total_value += stringToReal(q.product_info.actual_price);\n        ++state.counter;\n      }\n      // Se for decremento...\n      else {\n        state.total_value -= stringToReal(q.product_info.actual_price);\n        --state.counter;\n      }\n\n      return {\n        ...state,\n      }\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}