{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { useState } from 'react';\nimport { fetchProductsPending, fetchProductsSuccess, fetchProductsError } from '../store/actions/actions';\nconst BASE_URL = \"https://5e9935925eabe7001681c856.mockapi.io/api/v1/catalog/\";\nexport const fetchProducts = () => async dispatch => {\n  try {\n    dispatch(fetchProductsPending());\n    console.log(\"CUUUUU\");\n    const response = await fetch(BASE_URL);\n    const data = await response.json();\n    dispatch(fetchProductsSuccess(response));\n    return data; //dispatch(setProducts(data));\n  } catch (err) {\n    dispatch(fetchProductsError(err));\n  }\n};","map":{"version":3,"sources":["/home/carrocinha/codenation/fashionista/src/services/api.js"],"names":["connect","useState","fetchProductsPending","fetchProductsSuccess","fetchProductsError","BASE_URL","fetchProducts","dispatch","console","log","response","fetch","data","json","err"],"mappings":"AAAA,SACIA,OADJ,QAEO,aAFP;AAGA,SACIC,QADJ,QAEO,OAFP;AAIA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,QAIO,0BAJP;AAMA,MAAMC,QAAQ,GAAG,6DAAjB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAEjD,MAAI;AACAA,IAAAA,QAAQ,CAACL,oBAAoB,EAArB,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAD,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,IAAAA,QAAQ,CAACJ,oBAAoB,CAACO,QAAD,CAArB,CAAR;AACA,WAAOE,IAAP,CANA,CAOA;AACH,GARD,CAQE,OAAME,GAAN,EAAW;AACTP,IAAAA,QAAQ,CAACH,kBAAkB,CAACU,GAAD,CAAnB,CAAR;AACH;AAEJ,CAdM","sourcesContent":["import {\n    connect\n} from \"react-redux\";\nimport {\n    useState\n} from 'react';\n\nimport {\n    fetchProductsPending,\n    fetchProductsSuccess,\n    fetchProductsError\n} from '../store/actions/actions';\n\nconst BASE_URL = \"https://5e9935925eabe7001681c856.mockapi.io/api/v1/catalog/\";\n\nexport const fetchProducts = () => async dispatch => {\n\n    try {\n        dispatch(fetchProductsPending());\n        console.log(\"CUUUUU\");\n        const response = await fetch(BASE_URL);\n        const data = await response.json();\n        dispatch(fetchProductsSuccess(response));\n        return data;\n        //dispatch(setProducts(data));\n    } catch(err) {\n        dispatch(fetchProductsError(err));\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}