{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { ADD_PRODUCT, REMOVE_PRODUCT, UPDATE_CART_PRODUCT_QUANTITY } from '../actions/cartActions';\nimport { removeCartProduct } from \"../actions/cartActions\";\nimport { stringToReal } from \"../../utils/converters\";\nexport const INITIAL_STATE = {\n  cart: [],\n  total_value: 0.0,\n  counter: 0\n};\nconst dispatch = useDispatch(); // falta melhorias\n\nexport default function cartReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      state.total_value += stringToReal(action.data.product_info.actual_price);\n      return { ...state,\n        cart: [...state.cart, action.data],\n        counter: ++state.counter\n      };\n\n    case REMOVE_PRODUCT:\n      const newTotalValue = state.cart.find(product => product.product_info.code_color === action.product_id).product_info.actual_price;\n      const newCart = state.cart.filter(product => product.product_info.code_color !== action.product_id);\n      return { ...state,\n        counter: --state.counter,\n        cart: newCart,\n        total_value: state.total_value - stringToReal(newTotalValue)\n      };\n\n    case UPDATE_CART_PRODUCT_QUANTITY:\n      var q = state.cart.find(product => product.product_info.code_color === action.product_id && product.product_info.size === action.product_size); // Se n達o existir um produto no carrinho...\n\n      if (q.quantity === 0) {\n        if (action.value > 0) {\n          state.cart.find(product => product.product_info.code_color === action.product_id && product.product_info.size === action.product_size).quantity += action.value;\n        }\n      } // se existir ...\n      else {\n          state.cart.find(product => product.product_info.code_color === action.product_id && product.product_info.size === action.product_size).quantity += action.value;\n        } // Se for incremento...\n\n\n      if (action.value > 0) {\n        state.total_value += stringToReal(q.product_info.actual_price);\n        ++state.counter;\n      } // Se for decremento...\n      else {\n          // Se o contador for igual a 1, remova\n          if (state.counter === 1) {\n            dispatch(removeCartProduct(q.product_info.code_color));\n          } // Sen達o, decremente\n          else {\n              state.total_value -= stringToReal(q.product_info.actual_price);\n              --state.counter;\n            }\n        }\n\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/carrocinha/codenation/fashionista/src/store/reducers/cartReducer.js"],"names":["useDispatch","ADD_PRODUCT","REMOVE_PRODUCT","UPDATE_CART_PRODUCT_QUANTITY","removeCartProduct","stringToReal","INITIAL_STATE","cart","total_value","counter","dispatch","cartReducer","state","action","type","data","product_info","actual_price","newTotalValue","find","product","code_color","product_id","newCart","filter","q","size","product_size","quantity","value"],"mappings":"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","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport {\n  ADD_PRODUCT,\n  REMOVE_PRODUCT,\n  UPDATE_CART_PRODUCT_QUANTITY\n} from '../actions/cartActions';\n\nimport { removeCartProduct } from \"../actions/cartActions\";\n\nimport {\n  stringToReal\n} from \"../../utils/converters\";\n\nexport const INITIAL_STATE = {\n  cart: [],\n  total_value: 0.0,\n  counter: 0\n};\n\nconst dispatch = useDispatch();\n\n// falta melhorias\nexport default function cartReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n\n    case ADD_PRODUCT:\n      state.total_value += stringToReal(action.data.product_info.actual_price);\n      return {\n        ...state,\n        cart: [...state.cart, action.data],\n        counter: ++state.counter\n      }\n\n    case REMOVE_PRODUCT:\n\n      const newTotalValue = state.cart.find(product =>\n        product.product_info.code_color === action.product_id\n      ).product_info.actual_price;\n\n      const newCart = state.cart\n        .filter(product => product.product_info.code_color !== action.product_id);\n      return {\n        ...state,\n        counter: --state.counter,\n        cart: newCart,\n        total_value: state.total_value - stringToReal(newTotalValue)\n      }\n\n    case UPDATE_CART_PRODUCT_QUANTITY:\n\n      var q = state.cart.find(product =>\n        (product.product_info.code_color === action.product_id) &&\n        (product.product_info.size === action.product_size)\n      );\n\n      // Se n達o existir um produto no carrinho...\n      if (q.quantity === 0) {\n        if (action.value > 0) {\n          state.cart.find(product =>\n            product.product_info.code_color === action.product_id &&\n            (product.product_info.size === action.product_size)\n          ).quantity += action.value;\n        }\n      }\n      // se existir ...\n      else {\n        state.cart.find(product =>\n          product.product_info.code_color === action.product_id &&\n          (product.product_info.size === action.product_size)\n        ).quantity += action.value;\n      }\n\n      // Se for incremento...\n      if (action.value > 0) {\n        state.total_value += stringToReal(q.product_info.actual_price);\n        ++state.counter;\n      }\n      // Se for decremento...\n      else {\n        // Se o contador for igual a 1, remova\n        if (state.counter === 1) {\n          dispatch(removeCartProduct(q.product_info.code_color));\n        }\n        // Sen達o, decremente\n        else {\n          state.total_value -= stringToReal(q.product_info.actual_price);\n          --state.counter;\n        }\n      }\n\n      return {\n        ...state,\n      }\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}