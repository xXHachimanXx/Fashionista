{"ast":null,"code":"import { ADD_PRODUCT, REMOVE_PRODUCT, UPDATE_CART_PRODUCT_QUANTITY } from '../actions/cartActions';\nimport { stringToReal } from \"../../utils/converters\";\nexport const INITIAL_STATE = {\n  cart: [],\n  total_value: 0.0,\n  counter: 0\n}; // falta melhorias\n\nexport default function cartReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      state.total_value += stringToReal(action.data.product_info.actual_price);\n      return { ...state,\n        cart: [...state.cart, action.data],\n        counter: ++state.counter\n      };\n\n    case REMOVE_PRODUCT:\n      state.total_value -= state.cart.find(product => product.product_info.code_color === action.product_id).actual_price;\n      console.log(state.total_value);\n      const newCart = state.cart.filter(product => product.product_info.code_color !== action.product_id);\n      return { ...state,\n        counter: --state.counter,\n        cart: newCart\n      };\n\n    case UPDATE_CART_PRODUCT_QUANTITY:\n      var q = state.cart.find(product => product.product_info.code_color === action.product_id);\n\n      if (q.quantity === 0) {\n        if (action.value > 0) {\n          state.cart.find(product => product.product_info.code_color === action.product_id).quantity += action.value;\n        }\n      } else {\n        state.cart.find(product => product.product_info.code_color === action.product_id).quantity += action.value;\n      }\n\n      if (action.value > 0) {\n        state.total_value += stringToReal(q.product_info.actual_price);\n        ++state.counter;\n      } else {\n        state.total_value -= stringToReal(q.product_info.actual_price);\n        --state.counter;\n      }\n\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/carrocinha/codenation/fashionista/src/store/reducers/cartReducer.js"],"names":["ADD_PRODUCT","REMOVE_PRODUCT","UPDATE_CART_PRODUCT_QUANTITY","stringToReal","INITIAL_STATE","cart","total_value","counter","cartReducer","state","action","type","data","product_info","actual_price","find","product","code_color","product_id","console","log","newCart","filter","q","quantity","value"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,4BAHF,QAIO,wBAJP;AAMA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,IAAI,EAAE,EADqB;AAE3BC,EAAAA,WAAW,EAAE,GAFc;AAG3BC,EAAAA,OAAO,EAAE;AAHkB,CAAtB,C,CAMP;;AACA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGL,aAA7B,EAA4CM,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKX,WAAL;AACES,MAAAA,KAAK,CAACH,WAAN,IAAqBH,YAAY,CAACO,MAAM,CAACE,IAAP,CAAYC,YAAZ,CAAyBC,YAA1B,CAAjC;AACA,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACE,IAAvB,CAFD;AAGLL,QAAAA,OAAO,EAAE,EAAEE,KAAK,CAACF;AAHZ,OAAP;;AAMF,SAAKN,cAAL;AACEQ,MAAAA,KAAK,CAACH,WAAN,IAAqBG,KAAK,CAACJ,IAAN,CAAWU,IAAX,CAAgBC,OAAO,IAC1CA,OAAO,CAACH,YAAR,CAAqBI,UAArB,KAAoCP,MAAM,CAACQ,UADxB,EAEnBJ,YAFF;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACH,WAAlB;AAEA,YAAMe,OAAO,GAAGZ,KAAK,CAACJ,IAAN,CACbiB,MADa,CACNN,OAAO,IAAIA,OAAO,CAACH,YAAR,CAAqBI,UAArB,KAAoCP,MAAM,CAACQ,UADhD,CAAhB;AAEA,aAAO,EACL,GAAGT,KADE;AAELF,QAAAA,OAAO,EAAE,EAAEE,KAAK,CAACF,OAFZ;AAGLF,QAAAA,IAAI,EAAEgB;AAHD,OAAP;;AAMF,SAAKnB,4BAAL;AAEE,UAAIqB,CAAC,GAAGd,KAAK,CAACJ,IAAN,CAAWU,IAAX,CAAgBC,OAAO,IAC7BA,OAAO,CAACH,YAAR,CAAqBI,UAArB,KAAoCP,MAAM,CAACQ,UADrC,CAAR;;AAIA,UAAIK,CAAC,CAACC,QAAF,KAAe,CAAnB,EAAsB;AACpB,YAAId,MAAM,CAACe,KAAP,GAAe,CAAnB,EAAsB;AACpBhB,UAAAA,KAAK,CAACJ,IAAN,CAAWU,IAAX,CAAgBC,OAAO,IACrBA,OAAO,CAACH,YAAR,CAAqBI,UAArB,KAAoCP,MAAM,CAACQ,UAD7C,EAEEM,QAFF,IAEcd,MAAM,CAACe,KAFrB;AAGD;AACF,OAND,MAOK;AACHhB,QAAAA,KAAK,CAACJ,IAAN,CAAWU,IAAX,CAAgBC,OAAO,IACrBA,OAAO,CAACH,YAAR,CAAqBI,UAArB,KAAoCP,MAAM,CAACQ,UAD7C,EAEEM,QAFF,IAEcd,MAAM,CAACe,KAFrB;AAGD;;AAED,UAAIf,MAAM,CAACe,KAAP,GAAe,CAAnB,EAAsB;AACpBhB,QAAAA,KAAK,CAACH,WAAN,IAAqBH,YAAY,CAACoB,CAAC,CAACV,YAAF,CAAeC,YAAhB,CAAjC;AACA,UAAEL,KAAK,CAACF,OAAR;AACD,OAHD,MAIK;AACHE,QAAAA,KAAK,CAACH,WAAN,IAAqBH,YAAY,CAACoB,CAAC,CAACV,YAAF,CAAeC,YAAhB,CAAjC;AACA,UAAEL,KAAK,CAACF,OAAR;AACD;;AAED,aAAO,EACL,GAAGE;AADE,OAAP;;AAIF;AACE,aAAOA,KAAP;AAzDJ;AA2DD","sourcesContent":["import {\n  ADD_PRODUCT,\n  REMOVE_PRODUCT,\n  UPDATE_CART_PRODUCT_QUANTITY\n} from '../actions/cartActions';\n\nimport { stringToReal } from \"../../utils/converters\";\n\nexport const INITIAL_STATE = {\n  cart: [],\n  total_value: 0.0,\n  counter: 0\n};\n\n// falta melhorias\nexport default function cartReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n\n    case ADD_PRODUCT:\n      state.total_value += stringToReal(action.data.product_info.actual_price);\n      return {\n        ...state,\n        cart: [...state.cart, action.data],\n        counter: ++state.counter\n      }\n\n    case REMOVE_PRODUCT:\n      state.total_value -= state.cart.find(product => \n        product.product_info.code_color === action.product_id\n      ).actual_price;\n      console.log(state.total_value)\n\n      const newCart = state.cart\n        .filter(product => product.product_info.code_color !== action.product_id);\n      return {\n        ...state,\n        counter: --state.counter,\n        cart: newCart,\n      }\n\n    case UPDATE_CART_PRODUCT_QUANTITY:\n\n      var q = state.cart.find(product =>\n        product.product_info.code_color === action.product_id\n      );\n\n      if (q.quantity === 0) {\n        if (action.value > 0) {\n          state.cart.find(product =>\n            product.product_info.code_color === action.product_id\n          ).quantity += action.value;\n        }\n      }\n      else {\n        state.cart.find(product =>\n          product.product_info.code_color === action.product_id\n        ).quantity += action.value;\n      }\n\n      if (action.value > 0) {\n        state.total_value += stringToReal(q.product_info.actual_price);\n        ++state.counter;\n      }\n      else {\n        state.total_value -= stringToReal(q.product_info.actual_price);\n        --state.counter;\n      }\n\n      return {\n        ...state,\n      }\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}