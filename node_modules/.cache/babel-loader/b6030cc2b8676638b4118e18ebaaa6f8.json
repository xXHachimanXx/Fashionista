{"ast":null,"code":"import { FETCH_PRODUCTS_PENDING, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_ERROR } from '../actions/productsActions';\nimport { INITIAL_STATE } from \"../initialState\";\nexport default function productsReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS_PENDING:\n      return { ...state,\n        pending: true\n      };\n\n    case FETCH_PRODUCTS_SUCCESS:\n      return { ...state,\n        pending: false,\n        products: [...state.products, ...action.payload]\n      };\n\n    case FETCH_PRODUCTS_ERROR:\n      return { ...state,\n        pending: false,\n        error: action.payload\n      };\n      console.log(action.type);\n  }\n}\n/**\n export const getProducts = state => state.products;\n export const getProductsPending = state => state.pending;\n export const getProductsError = state => state.error;\n\n * [].reduce((obj, item) => {\n *\n * }, {});\n */","map":{"version":3,"sources":["/home/carrocinha/codenation/fashionista/src/store/reducers/productsReducer.js"],"names":["FETCH_PRODUCTS_PENDING","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_ERROR","INITIAL_STATE","productsReducer","state","action","type","pending","products","payload","error","console","log"],"mappings":"AAAA,SACEA,sBADF,EAEEC,sBAFF,EAGEC,oBAHF,QAIO,4BAJP;AAMA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAGF,aAAjC,EAAgDG,MAAhD,EAAwD;AAErE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,sBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKP,sBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,QAAQ,EAAE,CAAC,GAAGJ,KAAK,CAACI,QAAV,EAAoB,GAAGH,MAAM,CAACI,OAA9B;AAHL,OAAP;;AAKF,SAAKR,oBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAHT,OAAP;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACC,IAAnB;AAlBJ;AAqBD;AAED","sourcesContent":["import {\n  FETCH_PRODUCTS_PENDING,\n  FETCH_PRODUCTS_SUCCESS,\n  FETCH_PRODUCTS_ERROR,\n} from '../actions/productsActions';\n\nimport { INITIAL_STATE } from \"../initialState\";\n\nexport default function productsReducer(state = INITIAL_STATE, action) {\n\n  switch (action.type) {\n    case FETCH_PRODUCTS_PENDING:\n      return {\n        ...state,\n        pending: true\n      }\n    case FETCH_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        products: [...state.products, ...action.payload ]\n      }\n    case FETCH_PRODUCTS_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.payload\n      }\n      console.log(action.type)\n      \n  }\n}\n\n/**\n export const getProducts = state => state.products;\n export const getProductsPending = state => state.pending;\n export const getProductsError = state => state.error;\n\n * [].reduce((obj, item) => {\n *\n * }, {});\n */"]},"metadata":{},"sourceType":"module"}